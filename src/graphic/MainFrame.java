/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package graphic;

import base.Utilisateur;
import java.awt.event.KeyEvent;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import projet_2048.Plateau;

/**
 *
 * @author marine
 */
public class MainFrame extends javax.swing.JFrame {

    /**
     * Plateau du jeu.
     */
    public static Plateau plateau;

    /**
     * Utilisateur du jeu.
     */
    public static Utilisateur utilisateur;

    public Controleur controleur;

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        // Création d'un nouveau plateau
        plateau = new Plateau();
        // Ajout du controleur
        controleur = new Controleur(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new Panel();
        aide = new javax.swing.JButton();
        affichageIA = new javax.swing.JLabel();
        boutonSauvegarder = new javax.swing.JButton();
        aideTotale = new javax.swing.JButton();
        boutonStop = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Projet 2048");

        jPanel1.setPreferredSize(new java.awt.Dimension(400, 400));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 409, Short.MAX_VALUE)
        );

        aide.setText("I.A. prochain coup");
        aide.setFocusable(false);
        aide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aideActionPerformed(evt);
            }
        });

        affichageIA.setFocusable(false);

        boutonSauvegarder.setText("Sauvegarder");
        boutonSauvegarder.setFocusable(false);
        boutonSauvegarder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonSauvegarderActionPerformed(evt);
            }
        });

        aideTotale.setText("I.A. jusqu'à 2048");
        aideTotale.setFocusable(false);
        aideTotale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aideTotaleActionPerformed(evt);
            }
        });

        boutonStop.setText("Stop");
        boutonStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boutonStopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(boutonSauvegarder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(aideTotale, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(aide, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(affichageIA, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(boutonStop)
                        .addGap(31, 31, 31))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(aide)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(affichageIA, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(3, 3, 3))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(aideTotale)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(boutonSauvegarder))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(boutonStop)))
                        .addGap(481, 481, 481))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aideActionPerformed
        // TODO add your handling code here:

        // Appel de l'IA
        String resultat = plateau.iaNext();
        // Affichage du résultat
        JOptionPane.showMessageDialog(null, "Prochain déplacement conseillé : " + resultat, "IA - Aide pour le prochain coup", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_aideActionPerformed

    private void aideTotaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aideTotaleActionPerformed
        // TODO add your handling code here:

        // Création du Thread
        t = new Thread(new IntelligenceArt());
        // Lancement
        t.start();
    }//GEN-LAST:event_aideTotaleActionPerformed

    private void boutonSauvegarderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonSauvegarderActionPerformed
        // TODO add your handling code here:

        // Sauvegarde du plateau
        MainFrame.plateau.sauvegarder();

        // Sauvegarde du score utilisateur
        if (MainFrame.utilisateur != null) {
            MainFrame.utilisateur.insertionScore(MainFrame.plateau.score);
        }

        // Message confirmation
        JOptionPane.showMessageDialog(null, "Sauvegarde de la partie effectuée.", "OK", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_boutonSauvegarderActionPerformed

    private void boutonStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boutonStopActionPerformed
        // TODO add your handling code here:
        
        // Arrêt du thread
        t.stop();
    }//GEN-LAST:event_boutonStopActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Config.init();
                new MainFrame().setVisible(true);
            }
        });
    }

    private Thread t;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel affichageIA;
    private javax.swing.JButton aide;
    private javax.swing.JButton aideTotale;
    private javax.swing.JButton boutonSauvegarder;
    private javax.swing.JButton boutonStop;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    class IntelligenceArt implements Runnable {

        @Override
        public void run() {
            // Parcours, tant qu'on a pas atteint 2048
            while (!plateau.testVictoire() && plateau.testDep()) {
                // Appel de l'IA
                String resultat = plateau.iaNext();
                affichageIA.setText(resultat);
                // Interprétation de l'IA
                switch (resultat) {
                    case "HAUT":
                        controleur.actionCode(KeyEvent.VK_UP);
                        break;
                    case "BAS":
                        controleur.actionCode(KeyEvent.VK_DOWN);
                        break;
                    case "GAUCHE":
                        controleur.actionCode(KeyEvent.VK_LEFT);
                        break;
                    case "DROIT":
                        controleur.actionCode(KeyEvent.VK_RIGHT);
                        break;
                }
                // Petite pause
                try {
                    Thread.sleep(500);
                } catch (InterruptedException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

    }
}
